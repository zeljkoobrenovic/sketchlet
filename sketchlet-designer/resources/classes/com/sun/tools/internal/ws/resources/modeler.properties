mimemodeler.invalidMimeContent.invalidSchemaType=Ignoring the mime\:part. mime part\: {0} can not be mapped to schema type\: {1}
wsdlmodeler.invalid.parameterorder.parameter="{0}" specified in the parameterOrder attribute of operation "{1}" is not a valid part of the message.
wsdlmodeler.invalid.bindingFault.noSoapFaultName=soap\:fault name not specified, wsdl\:fault "{0}" in operation "{1}"
wsdlmodeler.warning.nonconforming.wsdl.import=Non conforming WS-I WSDL used for wsdl\:import
wsdlmodeler.invalid.bindingOperation.outputSoapBody.missingNamespace=output message of binding operation "{0}" must specify a value for the "namespace" attribute
wsdlmodeler.invalid.operation.fault.notLiteral=ignoring encoded fault "{0}" in literal binding operation "{1}"
wsdlmodeler.invalid.bindingOperation.inputMissingSoapBody=input message of binding operation "{0}" does not have a SOAP body extension
wsdlmodeler.warning.ignoringSOAPBinding.nonHTTPTransport=ignoring SOAP port "{0}"\: unrecognized transport. try running wsimport with -extension switch.
wsdlmodeler.invalid.bindingOperation.notFound=in binding "{1}", operation "{0}" does not match any operation in the corresponding port type
wsdlmodeler.unsupportedBinding.mime=WSDL MIME binding is not currently supported\!
wsdlmodeler.warning.ignoringHeaderFault.noElementAttribute=ignoring header fault part\="{0}" message\="{1}" of operation {2}
wsdlmodeler.invalid.operation.javaReservedWordNotAllowed.nonWrapperStyle=Invalid operation "{0}", can''t generate java method. Parameter\: part "{2}" in wsdl\:message "{1}", is a java keyword. Use customization to change the parameter name or change the wsdl\:part name.
wsdlmodeler.invalid.headerfault.notLiteral=Invalid headerfault "{0}" of binding operation "{1}"\: not literal
mimemodeler.invalidMimeContent.differentPart=Ignoring the mime\:part. Invalid mime\:part, the mime\:content has different part attribute.
wsdlmodeler.error.partNotFound=part "{1}" of operation "{0}" could not be resolved\!
wsdlmodeler.invalid.header.message.partMustHaveElementDescriptor=Invalid header "{0}" in operation {1}\: part must specify a "element" attribute
wsdlmodeler.invalid.operation.javaReservedWordNotAllowed.operationName=Invalid operation "{0}", it''s java reserved word, can''t generate java method. Use customization to change the operation name.
wsdlmodeler.invalid.bindingFault.outputMissingSoapFault=fault "{0}" in operation "{1}" does not have a SOAP fault extension
wsdlmodeler.warning.ignoringOperation.cannotHandleElementMessagePart=ignoring operation "{0}"\: message part does not refer to a schema type declaration
wsdlmodler.warning.operation.use=The WSDL used has operations with literal and encoded use. -f\:searchschema is not supported for this scenario.
wsdlmodeler.warning.ignoringNonSOAPPort=ignoring port "{0}"\: not a standard SOAP port. try running wsimport with -extension switch.
wsdlmodeler.invalid.bindingFault.messageHasMoreThanOnePart=fault "{0}" refers to message "{1}", but the message has more than one parts
wsdlmodeler.warning.noServiceDefinitionsFound=WSDL document does not define any services
wsdlmodeler.warning.ignoringFault.cant.resolve.message=ignoring fault "{0}" of binding operation "{1}"\: cannot resolve message
wsdlmodeler.jaxb.javatype.notfound=Schema descriptor {0} in message part "{1}" is not defined and could not be bound to Java. Perhaps the schema descriptor {0} is not defined in the schema imported/included in the WSDL. You can either add such imports/includes or run wsimport and provide the schema location using -b switch.
wsdlmodeler.warning.port.SOAPBinding.mixedStyle=not a WS-I BP1.1 compliant SOAP port "{0}"\: the wsdl binding has mixed style, it must be rpc-literal or document-literal operation\!
wsdlmodeler.invalid.doclitoperation=Invalid wsdl\:operation "{0}"\: its a document-literal operation,  message part must refer to a schema element declaration
modeler.nestedModelError=modeler error\: {0}
wsdlmodeler.duplicate.fault.soap.name=ignoring fault "{0}" of operation "{1}", soap\:fault name "{2}" is not unique
wsdlmodeler.invalid.bindingFault.wrongSoapFaultName=name of soap\:fault "{0}" doesn''t match the name of wsdl\:fault "{1}" in operation "{2}"
wsdlmodeler.warning.ignoringOperation.notLiteral=ignoring document-style operation "{0}"\: parameters are not literal
wsdlmodeler.warning.ignoringOperation.cannotHandleDocumentStyle=ignoring operation "{0}"\: cannot handle document-style operations
wsdlmodeler.warning.ignoringFault.notLiteral=ignoring encoded fault "{0}" of binding operation "{1}"
wsdlmodeler.invalid.rpclitoperation=Invalid wsdl\:operation "{0}"\: its a rpc-literal operation,  message part must refer to a schema type declaration
wsdlmodeler.invalid.operation.javaReservedWordNotAllowed.customName=Invalid operation "{0}", can''t generate java method. Parameter,customized name "{1}"  is a java keyword.
wsdlmodeler.warning.bindingOperation.multiplePartBinding=Check the abstract operation "{0}" binding, part "{1}" has multiple binding. Will try to generated artiffacts anyway...
wsdlmodeler.warning.port.SOAPBinding12=SOAP port "{0}"\: uses a non-standard SOAP 1.2 binding.
mimemodeler.invalidMimePart.nameNotAllowed=name attribute on wsdl\:part in Operation "{0}" is ignored. Its not allowed as per WS-I AP 1.0.
wsdlmodeler.warning.ignoringMimePart.notFound=ignoring mime\:part, cannot find part "{0}" referenced by the mime\:content in the wsdl\:operation "{1}"
wsdlmodeler.warning.operation.MoreThanOnePartInMessage=Ingoring operation "{0}"\: more than one part bound to body
wsdlmodeler.warning.ignoringOperation.javaReservedWordNotAllowed.nonWrapperStyle=Ignoring operation "{0}", can''t generate java method. Parameter\: part "{2}" in wsdl\:message "{1}", is a java keyword. Use customization to change the parameter name or change the wsdl\:part name.
wsdlmodeler.invalid.fault.cant.resolve.message=fault message "{0}" in binding operation "{1}" could not be resolved
wsdlmodeler.invalid.bindingFault.emptyMessage=fault "{0}" refers to message "{1}", but the message has no parts
wsdlmodeler.rpclit.unkownschematype=XML type "{0}" could not be resolved, XML to JAVA binding failed\! Please check the wsdl\:part "{1}" in the wsdl\:message "{2}".
wsdlmodeler.headerfault.part.notFound=part "{1}" not found for the header fault "{0}", in binding "{2}"
wsdlmodeler.warning.ignoringOperation.cannotHandleBodyPartsAttribute=ignoring operation "{0}"\: cannot handle "parts" attribute of "soap\:body" element
wsdlmodeler.nonUnique.body.error=Non unique body parts\! In a port, as per BP 1.1 R2710 operations must have unique operation signaure on the wire for successful dispatch. In port {0}, Operations "{1}" and "{2}" have the same request body block {3}. Try running wsimport with -extension switch, runtime will try to dispatch using SOAPAction
wsdlmodeler.warning.ignoringSOAPBinding.mixedStyle=ignoring port "{0}", its not WS-I BP 1.1 compliant\: the wsdl binding has mixed style, it must be rpc-literal or document-literal operation. try running wsimport with -extension switch.
mimemodeler.invalidMimeContent.missingTypeAttribute=Missing type attribute in mime\:content in operation "{0}". part attribute must be present in mime\:content declaration.
wsdlmodeler.warning.ignoringOperation.cannotHandleEmptyInputMessage=ignoring operation "{0}"\: input message is empty
wsdlmodeler.warning.noPortsInService=Service "{0}" does not contain any usable ports. try running wsimport with -extension switch.
wsdlmodeler.invalid.parameterOrder.tooManyUnmentionedParts=more than one part left out in the parameterOrder attribute of operation "{0}"
wsdlmodeler.invalid.bindingOperation.inputSoapBody.missingNamespace=input message of binding operation "{0}" must specify a value for the "namespace" attribute
wsdlmodeler.warning.ignoringHeader=ignoring header "{0}" of binding operation "{1}"
wsdlmodeler.responsebean.notfound=wsimport failed to generate async response bean for operation\: {0}
wsdlmodeler20.rpcenc.not.supported=rpc/encoded wsdl's are not supported in JAXWS 2.0. 
wsdlmodeler.warning.ignoringOperation.partNotFound=ignoring operation "{0}"\: part "{1}" not found
wsdlmodeler.invalid.message.partMustHaveElementDescriptor=in message "{0}", part "{1}" must specify a "element" attribute
wsdlmodeler.error.partsNotFound=parts "{0}" not found in the message "{1}", wrong WSDL
wsdlmodeler.warning.ignoringFault.notEncoded=ignoring literal fault "{0}" of binding operation "{1}"
wsdlmodeler.warning.ignoringOperation.notSupportedStyle=ignoring operation "{0}"\: not request-response or one-way
wsdlmodeler.invalid.message.partMustHaveTypeDescriptor=in message "{0}", part "{1}" must specify a "type" attribute
wsdlmodeler.multipleOutputParameters=multiple "out" parameters in operation\: {0}
wsdlmodeler.invalid.bindingOperation.multiplePartBinding=abstract operation "{0}" binding, part "{1}" has multiple binding.
wsdlmodeler.invalid=invalid WSDL document
wsdlmodeler.invalid.bindingOperation.multipleMatchingOperations=in binding "{1}", operation "{0}" does not reference a unique operation in the corresponding port type
wsdlmodeler.warning.ignoringHeader.cant.resolve.message=ignoring header "{0}" of binding operation "{1}"\: cannot resolve message
wsdlmodeler.warning.ignoringOperation.javaReservedWordNotAllowed.customizedOperationName=Ignoring operation "{0}", can''t generate java method ,customized name "{1}" of the wsdl\:operation is a java keyword.
wsdlmodeler.warning.ignoringHeader.notLiteral=ignoring header "{0}" of binding operation "{1}"\: not literal
wsdlmodeler.invalid.bindingOperation.inputHeader.missingNamespace=input header "{1}" of binding operation "{0}" must specify a value for the "namespace" attribute
wsdlmodeler.invalid.bindingOperation.missingInputName=binding operation "{0}" must specify a name for its input message
wsdlmodeler.warning.ignoringNonSOAPPort.noAddress=ignoring port "{0}"\: no SOAP address specified. try running wsimport with -extension switch.
wsdlmodeler.resultIsInOutParameter=result is "inout" parameter in operation\: {0}
wsdlmodeler.invalid.header.notFound=header "{0}" of binding operation "{1}"\: not found
mimemodeler.elementPart.invalidElementMimeType=The mime\:content part refers to wsdl\:part "{0}", defined using element attribute. Please make sure the mime type\: "{1}" is appropriate to serialize XML.
wsdlmodeler.invalid.header.notLiteral=Invalid header "{0}" of binding operation "{1}"\: not literal
mimemodeler.invalidMimeContent.mesagePartElementKind=wsdl\:part element referenced by mime\:content part attribute\: {0} must be defined using type attribute\!
wsdlmodeler.warning.ignoringOperation.notEncoded=ignoring RPC-style operation "{0}"\: parameters are not encoded
wsdlmodeler.warning.nonconforming.wsdl.types=Non conforming WS-I WSDL used for wsdl\:types
wsdlmodeler.warning.ignoringOperation.cannotHandleMoreThanOnePartInInputMessage=ignoring operation "{0}"\: more than one part in input message
wsdlmodeler.warning.ignoringOperation.cannotHandleEmptyOutputMessage=ignoring operation "{0}"\: output message is empty
wsdlmodeler.warning.r2716r2726=R2716/R2726 WSI-BasicProfile ver. 1.0, namespace attribute not allowed in doc/lit or rpc/lit for {0}\: "{1}"
wsdlmodeler.warning.noSOAPAddress=port "{0}" is not a SOAP port, it has no soap\:address 
wsdlmodeler.warning.ignoringFaults=ignoring faults declared by operation "{0}"
wsdlmodeler.invalid.bindingFault.missingName=fault "{0}" in operation "{1}" must specify a value for the "name" attribute
mimemodeler.warning.IgnoringinvalidHeaderPart.notDeclaredInRootPart=Headers not in root mime\:part with soap\:body, ignoring headers in operation "{0}"
mimemodeler.invalidMimeContent.errorLoadingJavaClass=Couldn't find class "{0}" for mime type "{1}"
wsdlmodeler.invalid.bindingOperation.notInPortType=in binding "{1}", operation "{0}" does not appear in the corresponding port type
wsdlmodeler.warning.ignoringOperation.conflictStyleInWSIMode=ignoring operation "{0}"\: binding style and operation style are conflicting
mimemodeler.invalidMimeContent.missingPartAttribute=Ignoring operation "{0}", missing part attribute in mime\:content. part attribute must be present in mime\:content declaration.
wsdlmodeler.warning.searchSchema.unrecognizedTypes=encountered {0} unrecognized type(s)
wsdlmodeler.invalid.operation.javaReservedWordNotAllowed.customizedOperationName=Invalid operation "{0}", can''t generate java method ,customized name "{1}" of the wsdl\:operation is a java keyword.
wsdlmodeler.invalid.header.cant.resolve.message=header "{0}" of binding operation "{1}"\: cannot resolve message
wsdlmodeler.invalid.bindingFault.missingNamespace=fault "{0}" in operation "{1}" must specify a value for the "namespace" attribute
mimemodeler.invalidMimePart.moreThanOneSOAPBody=Ignoring operation "{0}". The Multipart/Related structure has invalid root part\: more than one soap\:body parts found
wsdlmodeler.warning.ignoringHeader.inconsistentDefinition=ignoring header "{0}" of operation "{1}"\: part not found
wsdlmodeler.invalid.bindingFault.notFound=fault "{0}" in operation "{1}" does not match any fault in the corresponding port type operation
wsdlmodeler.warning.ignoringOperation.javaReservedWordNotAllowed.customName=Ignoring operation "{0}", can''t generate java method. Parameter,customized name "{1}" is a java keyword.
wsdlmodeler.warning.ignoringUnrecognizedSchemaExtension=ignoring schema element (unsupported version)\: {0}
wsdlmodeler.warning.ignoringHeaderFault.notFound=ignoring header fault "{0}", cannot find part "{1}" in binding "{2}"
wsdlmodeler.nonUnique.body.warning=Non unique body parts\! In a port, as per BP 1.1 R2710 operations must have unique operation signaure on the wire for successful dispatch. In port {0}, Operations "{1}" and "{2}" have the same request body block {3}. Method dispatching may fail, runtime will try to dispatch using SOAPAction
wsdlmodeler.invalid.operation.javaReservedWordNotAllowed.wrapperStyle=Invalid operation "{0}", can''t generate java method parameter. Local name of the wrapper child "{1}" in the global element "{2}" is a java keyword. Use customization to change the parameter name.
mimemodeler.invalidMimeContent.unknownSchemaType=Unknown schema type\: {1} for mime\:content part\: {0}
wsdlmodeler.warning.r2716=R2716 WSI-BasicProfile ver. 1.0, namespace attribute not allowed in doc/lit for {0}\: "{1}"
wsdlmodeler.warning.ignoringHeader.notFound=ignoring header "{0}" of binding operation "{1}"\: not found
wsdlmodeler.warning.ignoringOperation.cannotHandleTypeMessagePart=ignoring operation "{0}"\: message part does not refer to a schema element declaration
wsdlmodeler.invalid.parameterOrder.invalidParameterOrder=parameterOrder attribute on operation "{0}" is invalid, ignoring parameterOrder hint
wsdlmodeler.invalid.bindingOperation.missingOutputName=binding operation "{0}" must specify a name for its output message
wsdlmodeler.invalidOperation=invalid operation\: {0}
wsdlmodeler.invalid.bindingOperation.outputHeader.missingNamespace=output header "{1}" of binding operation "{0}" must specify a value for the "namespace" attribute
wsdlmodeler.warning.ignoringHeader.partFromBody=header part\: "{0}" already bound by soapbind\:body, illegal to bind the part twice
wsdlmodeler.invalid.operation.notSupportedStyle=Invalid WSDL, wsdl\:operation "{0}" in wsdl\:portType "{1}"\: not request-response or one-way
wsdlmodeler.warning.ignoringOperation.notNCName=Ignoring operation "{0}", it has illegal character ''{1}'' in its name. Its rpc-literal operation - jaxws won't be able to serialize it\!
wsdlmodeler.invalid.parameter.differentTypes=parameter "{0}" of operation "{1}" appears with different types in the input and output messages
wsdlmodeler.warning.ignoringFault.documentOperation=ignoring fault "{0}" of document-style operation "{1}"
wsdlmodeler.warning.nonconforming.wsdl.use=Processing WS-I non conforming operation "{0}" with RPC-Style and SOAP-encoded
wsdlmodeler.warning.nonSOAPPort=port "{0}"\: not a standard SOAP port. The generated artifacts may not work with JAXWS runtime. 
wsdlmodeler.invalid.headerfault.message.partMustHaveElementDescriptor=Invalid headerfault "{0}" for header {1} in operation {2}\: part must specify a "element" attribute
wsdlmodeler.invalidState.modelingOperation=invalid state while modeling operation\: {0}
wsdlmodeler.warning.ignoringOperation.javaReservedWordNotAllowed.operationName=Ignoring operation "{0}", it''s java reserved word, can''t generate java method. Use customization to change the operation name.
wsdlmodeler.warning.ignoringHeader.notEncoded=ignoring header "{0}" of binding operation "{1}"\: not SOAP-encoded
wsdlmodeler.duplicate.fault.part.name=ignoring fault "{0}" of operation "{1}", part name "{2}" is not unique
wsdlmodeler.invalid.operation.MoreThanOnePartInMessage=operation "{0}"\: more than one part bound to body
wsdlmodeler.warning.ignoringSOAPBinding12=Ignoring SOAP port "{0}"\: it uses non-standard SOAP 1.2 binding.\nYou must specify the "-extension" option to use this binding.
wsdlmodeler.invalid.bindingFault.notUnique=fault "{0}" in operation "{1}" matches more than one fault in the corresponding port type operation
wsdlmodeler.invalid.bindingOperation.outputMissingSoapBody=output message of binding operation "{0}" does not have a SOAP body extension
wsdlmodeler.warning.ignoringHeaderFault.notLiteral=ignoring header fault part\="{0}" message\="{1}" of operation {2}, use attribute MUST be "literal"
wsdlmodeler.warning.ignoringOperation.cannotHandleMoreThanOnePartInOutputMessage=ignoring operation "{0}"\: more than one part in output message
wsdlmodeler.warning.noOperationsInPort=Port "{0}" does not contain any usable operations
wsdlmodeler.warning.ignoringOperation.javaReservedWordNotAllowed.wrapperStyle=Ignoring operation "{0}", can''t generate java method parameter. Local name of the wrapper child "{1}" in the global element "{2}" is a java keyword. Use customization to change the parameter name.
wsdlmodeler.unsolvableNamingConflicts=the following naming conflicts occurred\: {0}
