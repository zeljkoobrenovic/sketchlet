io.exception=Can''t recover from an I/O error with the following message\: {0}.
no.outputdir.specified=No output directory was specified on the command line.  Try -help.
unknown.type.for.field=An unknown type encountered when generating old style headers.
tried.to.define.non.static=Tried to generate \#define for non-static field.
no.classes.specified=No classes were specified on the command line.  Try -help.
old.llni.mixed=Can''t mix options -old and -llni.  Try -help.
unknown.type.in.method.signature=An unknown type eccountered when generating old style stubs.
encoding.iso8859_1.not.found=ISO8859_1 converter was not found for output.  This is probably due to an error in the installation installation.
tracing.not.supported=Warning\: Tracing is no longer supported.  Instead, use-verbose\:jni option of the virtual machine.
at.args.cant.read=Can''t read command line arguments from file {1}.
jni.unknown.type=An unknown type encountered (JNI).
jni.llni.mixed=Can''t mix options -jni and -llni.  Try -help.
no.bootclasspath.specified=No bootclasspath was specified on the command line.  Try -help.
class.not.found=Class {0} could not be found.
no.outputfile.specified=No outputfile was specified on the command line.  Try -help.
unknown.array.type=An unknown array type encountered when generating old style headers.
at.args.io.exception=The following I/O problem was encountered when processing an @ argument on the command line\: {0}.
no.classpath.specified=No classpath was specified on the command line.  Try -help.
old.not.supported=Option -old not supported by this version of javah.
super.class.not.found=A required super class {0} could not be found.
dir.file.mixed=Can''t mix options -d and -o.  Try -help.
invalid.method.signature=Invalid method signature\: {0}
unknown.option={0} is an illegal argument\n
cant.create.dir=The directory {0} could not be create for output.
old.jni.mixed=Can''t mix options -jni and -old.  Try -help.
usage=Usage\: javah [options] <classes>\n\nwhere [options] include\:\n\n\t-help                 Print this help message and exit\n\t-classpath <path>     Path from which to load classes\n\t-bootclasspath <path> Path from which to load bootstrap classes\n\t-d <dir>              Output directory\n\t-o <file>             Output file (only one of -d or -o may be used)\n\t-jni                  Generate JNI-style header file (default)\n\t-version              Print version information\n\t-verbose              Enable verbose output\n\t-force\t\t      Always write output files\n\n<classes> are specified with their fully qualified names (for\ninstance, java.lang.Object).\n
jni.no.stubs=JNI does not require stubs, please refer to the JNI documentation.
javah.version=javah version "{0}"
